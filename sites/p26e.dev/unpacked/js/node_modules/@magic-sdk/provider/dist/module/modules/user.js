import { __extends } from "tslib";
import { MagicPayloadMethod, } from '@magic-sdk/types';
import { BaseModule } from './base-module';
import { createJsonRpcRequestPayload } from '../core/json-rpc';
var UserModule = /** @class */ (function (_super) {
    __extends(UserModule, _super);
    function UserModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** */
    UserModule.prototype.getIdToken = function (configuration) {
        var requestPayload = createJsonRpcRequestPayload(this.sdk.testMode ? MagicPayloadMethod.GetIdTokenTestMode : MagicPayloadMethod.GetIdToken, [configuration]);
        return this.request(requestPayload);
    };
    /** */
    UserModule.prototype.generateIdToken = function (configuration) {
        var requestPayload = createJsonRpcRequestPayload(this.sdk.testMode ? MagicPayloadMethod.GenerateIdTokenTestMode : MagicPayloadMethod.GenerateIdToken, [configuration]);
        return this.request(requestPayload);
    };
    /** */
    UserModule.prototype.getMetadata = function () {
        var requestPayload = createJsonRpcRequestPayload(this.sdk.testMode ? MagicPayloadMethod.GetMetadataTestMode : MagicPayloadMethod.GetMetadata);
        return this.request(requestPayload);
    };
    /** */
    UserModule.prototype.updateEmail = function (configuration) {
        var email = configuration.email, _a = configuration.showUI, showUI = _a === void 0 ? true : _a;
        var requestPayload = createJsonRpcRequestPayload(this.sdk.testMode ? MagicPayloadMethod.UpdateEmailTestMode : MagicPayloadMethod.UpdateEmail, [{ email: email, showUI: showUI }]);
        return this.request(requestPayload);
    };
    /** */
    UserModule.prototype.isLoggedIn = function () {
        var requestPayload = createJsonRpcRequestPayload(this.sdk.testMode ? MagicPayloadMethod.IsLoggedInTestMode : MagicPayloadMethod.IsLoggedIn);
        return this.request(requestPayload);
    };
    /** */
    UserModule.prototype.logout = function () {
        var requestPayload = createJsonRpcRequestPayload(this.sdk.testMode ? MagicPayloadMethod.LogoutTestMode : MagicPayloadMethod.Logout);
        return this.request(requestPayload);
    };
    return UserModule;
}(BaseModule));
export { UserModule };
//# sourceMappingURL=user.js.map